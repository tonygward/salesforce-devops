name: Deploy to Salesforce

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Salesforce CLI
        run: npm install --global @salesforce/cli

      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.GMAIL_AUTH_URL }}" > auth.txt
          sf auth sfdxurl store --sfdx-url-file auth.txt --alias gmail
          sf config set target-org=gmail

      - name: Deploy Metadata
        run: sf project deploy start --source-dir force-app --wait 10

      # - name: Run Apex Tests
      #   run: |
      #     # sf apex run test --code-coverage --result-format junit --output-dir test-results --wait 60
      #     sf apex run test --code-coverage --wait 60

      - name: Run Apex tests (with coverage) + save results
        run: |
          testRun=$(sf apex run test \
            --test-level RunLocalTests \
            --output-dir test-results \
            --code-coverage \
            --detailed-coverage \
            --wait 10 \
            --json)

          cat test-results/test-result.txt
          testRunId=$(cat test-results/test-run-id.txt)
          testResultsFileName="test-results/test-result-$testRunId.json"
          echo $testResultsFileName


      # - name: Fail if org coverage < 75%
      #   run: |
      #     FILE="test-results/test-result-codecoverage.json"
      #     if [ ! -f "$FILE" ]; then
      #       echo "Coverage file not found: $FILE"
      #       exit 1
      #     fi
      #     cat "$FILE"
      #     total=$(jq '[.coverage[] | (.totalLines // (.numLocations // 0))] | add' "$FILE")
      #     covered=$(jq '[.coverage[] | (.coveredLines // (.numLocationsCovered // 0))] | add' "$FILE")

      #     pct=$(awk "BEGIN { if ($total==0) print 100; else print ($covered/$total)*100 }")
      #     echo "Org-wide Apex coverage: ${pct}%"
      #     awk "BEGIN { exit ($pct<75) }" || { echo "❌ Coverage ${pct}% is below 75%"; exit 1; }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: apex-test-artifacts
          path: |
            test-results/**
            coverage/**